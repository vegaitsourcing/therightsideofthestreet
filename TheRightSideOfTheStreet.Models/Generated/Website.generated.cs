//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace TheRightSideOfTheStreet.Models
{
	/// <summary>Website</summary>
	[PublishedContentModel("website")]
	public partial class Website : Page, IBanner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "website";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Website(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Website, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contact Email
		///</summary>
		[ImplementPropertyType("contactEmail")]
		public string ContactEmail
		{
			get { return this.GetPropertyValue<string>("contactEmail"); }
		}

		///<summary>
		/// Hygiene Links: Page links inside a footer
		///</summary>
		[ImplementPropertyType("hygieneLinks")]
		public IEnumerable<RJP.MultiUrlPicker.Models.Link> HygieneLinks
		{
			get { return this.GetPropertyValue<IEnumerable<RJP.MultiUrlPicker.Models.Link>>("hygieneLinks"); }
		}

		///<summary>
		/// Info Text: Text that goes inside a footer
		///</summary>
		[ImplementPropertyType("infoText")]
		public string InfoText
		{
			get { return this.GetPropertyValue<string>("infoText"); }
		}

		///<summary>
		/// Info Title: The title of text that goes inside a footer
		///</summary>
		[ImplementPropertyType("infoTitle")]
		public string InfoTitle
		{
			get { return this.GetPropertyValue<string>("infoTitle"); }
		}

		///<summary>
		/// Modules
		///</summary>
		[ImplementPropertyType("modules")]
		public IEnumerable<IPublishedContent> Modules
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("modules"); }
		}

		///<summary>
		/// Top Navigation Link
		///</summary>
		[ImplementPropertyType("topNavigationLink")]
		public RJP.MultiUrlPicker.Models.Link TopNavigationLink
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.Link>("topNavigationLink"); }
		}

		///<summary>
		/// Banner Image: Note: Image dimensions should be
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return TheRightSideOfTheStreet.Models.Banner.GetBannerImage(this); }
		}

		///<summary>
		/// Banner Link
		///</summary>
		[ImplementPropertyType("bannerLink")]
		public RJP.MultiUrlPicker.Models.Link BannerLink
		{
			get { return TheRightSideOfTheStreet.Models.Banner.GetBannerLink(this); }
		}

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return TheRightSideOfTheStreet.Models.Banner.GetBannerTitle(this); }
		}
	}
}
