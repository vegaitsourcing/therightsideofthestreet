//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace TheRightSideOfTheStreet.Models
{
	// Mixin content Type 1066 with alias "banner"
	/// <summary>Banner</summary>
	public partial interface IBanner : IPublishedContent
	{
		/// <summary>Banner Image</summary>
		IPublishedContent BannerImage { get; }

		/// <summary>Banner Link</summary>
		RJP.MultiUrlPicker.Models.Link BannerLink { get; }

		/// <summary>Banner Title</summary>
		string BannerTitle { get; }
	}

	/// <summary>Banner</summary>
	[PublishedContentModel("banner")]
	public partial class Banner : PublishedContentModel, IBanner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Image: Note: Image dimensions should be 1500x745px
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return GetBannerImage(this); }
		}

		/// <summary>Static getter for Banner Image</summary>
		public static IPublishedContent GetBannerImage(IBanner that) { return that.GetPropertyValue<IPublishedContent>("bannerImage"); }

		///<summary>
		/// Banner Link
		///</summary>
		[ImplementPropertyType("bannerLink")]
		public RJP.MultiUrlPicker.Models.Link BannerLink
		{
			get { return GetBannerLink(this); }
		}

		/// <summary>Static getter for Banner Link</summary>
		public static RJP.MultiUrlPicker.Models.Link GetBannerLink(IBanner that) { return that.GetPropertyValue<RJP.MultiUrlPicker.Models.Link>("bannerLink"); }

		///<summary>
		/// Banner Title
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return GetBannerTitle(this); }
		}

		/// <summary>Static getter for Banner Title</summary>
		public static string GetBannerTitle(IBanner that) { return that.GetPropertyValue<string>("bannerTitle"); }
	}
}
